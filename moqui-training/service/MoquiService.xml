<?xml version="1.0" encoding="utf-8" ?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="create" noun="MoquiTraining" type="entity-auto">
        <in-parameters>
            <auto-parameters entity-name="tutorial.MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" required="true"/>
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>

    <service verb="create" noun="MoquiTrainingInline" >
        <in-parameters>
            <auto-parameters entity-name= "tutorial.MoquiTraining">
            </auto-parameters>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <service-call name="create#MoquiTraining" in-map="context"  out-map="context"/>
        </actions>
    </service>

    <service verb="create" noun="MoquiTrainingGroovy" type="script"
             location="component://moqui-training/service/Train.groovy">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true" />
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>

    <service verb="find" noun="MoquiTraining" >

        <in-parameters>
            <parameter name="trainingId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingRecord"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="tutorial.MoquiTraining" value-field="trainingRecord">
            </entity-find-one>
        </actions>
    </service>

    <service verb="store" noun="MoquiTrainingUpdate">
        <description>Create or update MoquiTraining records based on trainingName or trainingId.</description>

        <in-parameters>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" required="true"/>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>

        <actions>
            <entity-find-one entity-name="MoquiTraining" value-field="existingRecord">
                <field-map field-name="trainingName" from="trainingName"/>
            </entity-find-one>

            <!-- If record exists, update it -->
            <if condition="existingRecord">
                <then>
                    <!-- Update fields from context -->
                    <set field="existingRecord.trainingDate" from="trainingDate"/>
                    <set field="existingRecord.trainingName" from="trainingName"/>
                    <set field="existingRecord.trainingPrice" from="trainingPrice"/>
                    <set field="existingRecord.trainingDuration" from="trainingDuration"/>

                    <entity-update value-field="existingRecord"/>

                    <!-- Set output parameter to return updated training ID -->
                    <set field="trainingId" from="existingRecord.trainingId"/>
                </then>
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                </else>
            </if>

        </actions>
    </service>


<!--    <service verb="find" noun="Order">-->
<!--        <in-parameters>-->
<!--            <parameter name="orderId"/>-->
<!--        </in-parameters>-->
<!--        <out-parameters>-->
<!--            <parameter name="orderInfo" required="true" />-->
<!--            <parameter name="orderItem"/>-->
<!--        </out-parameters>-->
<!--        <actions>-->
<!--            <entity-find-one entity-name="OrderItem" value-field="orderItem">-->
<!--            </entity-find-one>-->
<!--        </actions>-->
<!--    </service>-->


<!-- Order Header   -->
    <service verb="create" noun="Order">
        <in-parameters>
            <auto-parameters entity-name="OrderHeader" include="nonpk" required="true">
            </auto-parameters>
            <parameter name="orderItems"  type="List" >
                <parameter name="list" type="Map">
                    <parameter name="productId" />
                    <parameter name="quantity"/>
                    <parameter name="status"/>
                </parameter>
            </parameter>
        </in-parameters>
        <out-parameters>
            <parameter name="orderId"/>
        </out-parameters>
        <actions>
            <service-call name="create#OrderHeader" in-map="context" out-map="map"/>
            <iterate list="orderItem" entry="item">
                <set field = "item.orderId" from = "${map.orderId}"/>
                <service-call name="create#OrderItem" in-map="item" />
            </iterate>
        </actions>
    </service>

    <service verb="create" noun="OrderItem" type="entity-auto">
        <in-parameters>
            <auto-parameters entity-name="OrderItem" include="nonpk" required="true">
            </auto-parameters>
        </in-parameters>
        <out-parameters>
            <parameter name="orderItemSeqId"/>
        </out-parameters>
    </service>

    <service verb="create" noun="OrderHeader" type="entity-auto">
        <in-parameters>
            <auto-parameters entity-name="OrderHeader" include="nonpk" required="true">
            </auto-parameters>
        </in-parameters>
        <out-parameters>
            <parameter name="orderId"/>
        </out-parameters>
    </service>


    <service verb="add" noun="OrderItem" type="entity-auto">
        <in-parameters>
            <auto-parameters entity-name="OrderItem">
            </auto-parameters>
        </in-parameters>
        <out-parameters>
            <parameter name="orderSeqId" />
        </out-parameters>
    </service>



    <!--    Delete order-->
    <service verb="delete" noun="OrderHeader">
        <in-parameters>
            <parameter name="orderId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="param" default-value="Order Deleted"/>
        </out-parameters>

        <actions>
            <entity-find-one entity-name="OrderHeader" value-field="orderList"/>
            <if condition="orderList">
                <then>
                    <entity-delete-related value-field="orderList"   relationship-name="OrderHeader#tutorial.OrderItem"/>
                    <entity-delete-by-condition entity-name="OrderHeader" >
                        <econdition field-name="orderId"/>
                    </entity-delete-by-condition>
                    <set field="param" value="Order Deleted"/>
                </then>
                <else>
                    <set field="param" value="Order not present in db"/>
                </else>
            </if>
        </actions>
    </service>


</services>

